@using Blazored.LocalStorage
@using EFurni.Presentation.Clients.ClientInterfaces
@using System.Diagnostics
@inject ILocalStorageService localStorage
@inject NavigationManager NavigationManager
@inject IBasketClient basketClient;

<header class="main_menu home_menu">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-lg-12">
                <nav class="navbar navbar-expand-lg navbar-light">
                    <a class="navbar-brand" href="/">
                        <img src="../img/logo.png" alt="logo">
                    </a>
                    <button class="navbar-toggler" type="button" data-toggle="collapse"
                            data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent"
                            aria-expanded="false" aria-label="Toggle navigation">
                        <span class="menu_icon">
                            <i class="fas fa-bars"></i>
                        </span>
                    </button>

                    <div class="collapse navbar-collapse main-menu-item" id="navbarSupportedContent">
                        <ul class="navbar-nav">
                            <li class="nav-item">
                                <a class="nav-link hyper-link" href="/">Home</a>
                            </li>
                            <li class="nav-item">
                                <li class="nav-item">
                                    <a class="nav-link hyper-link" href="/categories">Products</a>
                                </li>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link hyper-link" href="/track">Tracking</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link hyper-link" href="/basket">Basket</a>
                            </li>
                        </ul>
                    </div>
                    <div class="hearer_icon d-flex" style="cursor: pointer" @onclick="@(() => { NavigationManager.NavigateTo("/login", true); })">
                        <a>
                            <i class="fas fa-user"></i>
                        </a>
                        <div class="dropdown cart" @onclick="@(() => { NavigationManager.NavigateTo("/basket", true); })">
                            <a class="dropdown-toggle" style="cursor: pointer" id="navbarDropdown3" role="button"
                               data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i @onclick="@(() => { NavigationManager.NavigateTo("/basket", true); })" class="fas fa-cart-plus"></i>
                            </a>
                        </div>
                    </div>
                </nav>
            </div>
        </div>
    </div>
    <style>
        .main_menu .cart i:after {
            content: "@ctx" !important;
        }
    </style>
</header>


@code
{
    public string ctx = "0";
    //pretty questionable method but it works
    [DebuggerHidden]
    private async Task RefreshBasket()
    {
        while (true)
        {
            try
            {
                ctx = (await basketClient.GetAllBasketProducts()).Count().ToString();
    // ctx = (await basketClient.GetAllBasketProducts()).Count().ToString();
                StateHasChanged();
            }
            catch (Exception e)
            {
                Console.WriteLine("Warning JS interop error.");
            }
            await Task.Delay(300);
        }
    }

    static string id;

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        await base.SetParametersAsync(parameters);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            RefreshBasket();
        }
        await base.OnAfterRenderAsync(firstRender);
    }

}